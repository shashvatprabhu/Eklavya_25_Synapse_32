$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
  $var wire 1 # clk $end
  $var wire 1 $ reset $end
  $var wire 1 % CPU_READ $end
  $var wire 32 & CPU_ADDRESS [31:0] $end
  $var wire 32 ' CPU_INSTR [31:0] $end
  $var wire 1 ( CPU_BUSYWAIT $end
  $var wire 1 ) MEM_BUSYWAIT $end
  $var wire 1 * MEM_READ_REQ $end
  $var wire 32 + MEM_ADDRESS [31:0] $end
  $var wire 32 , MEM_READDATA [31:0] $end
  $var wire 1 - MEM_READDATA_VALID $end
  $var wire 1 . HIT $end
  $var wire 32 / CACHE_READDATA [31:0] $end
  $var wire 27 0 STORED_TAG [26:0] $end
  $var wire 1 1 VALID $end
  $var wire 1 2 COMPARE_EN $end
  $var wire 1 3 WRITE_ENABLE $end
  $var wire 32 4 CACHE_ADDRESS [31:0] $end
  $var wire 32 5 CACHE_WRITEDATA [31:0] $end
  $var wire 27 6 CACHE_WRITETAG [26:0] $end
  $var wire 1 7 CACHE_WRITEVALID $end
 $upscope $end
 $scope module icache_controller $end
  $var wire 32 S ADDR_WIDTH [31:0] $end
  $var wire 32 S DATA_WIDTH [31:0] $end
  $var wire 32 T INDEX_WIDTH [31:0] $end
  $var wire 32 U TAG_WIDTH [31:0] $end
  $var wire 1 8 clk $end
  $var wire 1 9 reset $end
  $var wire 1 : CPU_READ $end
  $var wire 32 ; CPU_ADDRESS [31:0] $end
  $var wire 32 < CPU_INSTR [31:0] $end
  $var wire 1 = CPU_BUSYWAIT $end
  $var wire 1 > MEM_BUSYWAIT $end
  $var wire 1 ? MEM_READ_REQ $end
  $var wire 32 @ MEM_ADDRESS [31:0] $end
  $var wire 32 A MEM_READDATA [31:0] $end
  $var wire 1 B MEM_READDATA_VALID $end
  $var wire 1 C HIT $end
  $var wire 32 D CACHE_READDATA [31:0] $end
  $var wire 27 E STORED_TAG [26:0] $end
  $var wire 1 F VALID $end
  $var wire 1 G COMPARE_EN $end
  $var wire 1 H WRITE_ENABLE $end
  $var wire 32 I CACHE_ADDRESS [31:0] $end
  $var wire 32 J CACHE_WRITEDATA [31:0] $end
  $var wire 27 K CACHE_WRITETAG [26:0] $end
  $var wire 1 L CACHE_WRITEVALID $end
  $var wire 2 V S_LOOKUP [1:0] $end
  $var wire 2 W S_REQ_MEM [1:0] $end
  $var wire 2 X S_WAIT_VALID [1:0] $end
  $var wire 2 Y S_UPDATE [1:0] $end
  $var wire 2 M state [1:0] $end
  $var wire 2 N next_state [1:0] $end
  $var wire 32 O saved_address [31:0] $end
  $var wire 27 P saved_tag [26:0] $end
  $var wire 5 Q addr_index [4:0] $end
  $var wire 27 R addr_tag [26:0] $end
 $upscope $end
$enddefinitions $end


#0
1#
1$
0%
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
0(
0)
0*
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
0-
0.
b00000000000000000000000000000000 /
b000000000000000000000000000 0
01
02
03
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b000000000000000000000000000 6
07
18
19
0:
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
0=
0>
0?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
0B
0C
b00000000000000000000000000000000 D
b000000000000000000000000000 E
0F
0G
0H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b000000000000000000000000000 K
0L
b00 M
b00 N
b00000000000000000000000000000000 O
b000000000000000000000000000 P
b00000 Q
b000000000000000000000000000 R
b00000000000000000000000000100000 S
b00000000000000000000000000000101 T
b00000000000000000000000000011011 U
b00 V
b01 W
b10 X
b11 Y
#5000
0#
08
#10000
1#
18
#15000
0#
08
#20000
1#
0$
1%
b00000000000000000010101010001000 &
1(
12
b00000000000000000010101010001000 4
18
09
1:
b00000000000000000010101010001000 ;
1=
1G
b00000000000000000010101010001000 I
b01 N
b01000 Q
b000000000000000000101010100 R
#25000
0#
08
#30000
1#
1*
b00000000000000000010101010001000 +
b00010010001101000101011001111000 ,
1-
02
b00000000000000000000000000000000 4
18
1?
b00000000000000000010101010001000 @
b00010010001101000101011001111000 A
1B
0G
b00000000000000000000000000000000 I
b01 M
b10 N
b00000000000000000010101010001000 O
b000000000000000000101010100 P
#35000
0#
08
#40000
1#
0*
b00000000000000000000000000000000 +
0-
18
0?
b00000000000000000000000000000000 @
0B
b10 M
#45000
0#
08
#50000
1#
18
#50001
