$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
  $var wire 1 # clk $end
  $var wire 1 $ reset $end
  $var wire 1 % read $end
  $var wire 1 & write $end
  $var wire 32 ' address [31:0] $end
  $var wire 32 ( write_data [31:0] $end
  $var wire 24 ) write_tag [23:0] $end
  $var wire 1 * way_select [0:0] $end
  $var wire 1 + write_valid $end
  $var wire 32 , read_data [31:0] $end
  $var wire 1 - hit $end
 $upscope $end
 $scope module cache_storage $end
  $var wire 32 ?! WORD_WIDTH [31:0] $end
  $var wire 32 @! INDEX_BITS [31:0] $end
  $var wire 32 A! TAG_BITS [31:0] $end
  $var wire 32 B! ASSOCIATIVITY [31:0] $end
  $var wire 1 . clk $end
  $var wire 1 / reset $end
  $var wire 1 0 read $end
  $var wire 1 1 write $end
  $var wire 32 2 address [31:0] $end
  $var wire 32 3 write_data [31:0] $end
  $var wire 24 4 write_tag [23:0] $end
  $var wire 1 5 way_select [0:0] $end
  $var wire 1 6 write_valid $end
  $var wire 32 7 read_data [31:0] $end
  $var wire 1 8 hit $end
  $var wire 32 C! NUM_SETS [31:0] $end
  $var wire 1 9 valid_bits[0][0] $end
  $var wire 1 : valid_bits[0][1] $end
  $var wire 1 ; valid_bits[1][0] $end
  $var wire 1 < valid_bits[1][1] $end
  $var wire 1 = valid_bits[2][0] $end
  $var wire 1 > valid_bits[2][1] $end
  $var wire 1 ? valid_bits[3][0] $end
  $var wire 1 @ valid_bits[3][1] $end
  $var wire 1 A valid_bits[4][0] $end
  $var wire 1 B valid_bits[4][1] $end
  $var wire 1 C valid_bits[5][0] $end
  $var wire 1 D valid_bits[5][1] $end
  $var wire 1 E valid_bits[6][0] $end
  $var wire 1 F valid_bits[6][1] $end
  $var wire 1 G valid_bits[7][0] $end
  $var wire 1 H valid_bits[7][1] $end
  $var wire 1 I valid_bits[8][0] $end
  $var wire 1 J valid_bits[8][1] $end
  $var wire 1 K valid_bits[9][0] $end
  $var wire 1 L valid_bits[9][1] $end
  $var wire 1 M valid_bits[10][0] $end
  $var wire 1 N valid_bits[10][1] $end
  $var wire 1 O valid_bits[11][0] $end
  $var wire 1 P valid_bits[11][1] $end
  $var wire 1 Q valid_bits[12][0] $end
  $var wire 1 R valid_bits[12][1] $end
  $var wire 1 S valid_bits[13][0] $end
  $var wire 1 T valid_bits[13][1] $end
  $var wire 1 U valid_bits[14][0] $end
  $var wire 1 V valid_bits[14][1] $end
  $var wire 1 W valid_bits[15][0] $end
  $var wire 1 X valid_bits[15][1] $end
  $var wire 24 Y tag_array[0][0] [23:0] $end
  $var wire 24 Z tag_array[0][1] [23:0] $end
  $var wire 24 [ tag_array[1][0] [23:0] $end
  $var wire 24 \ tag_array[1][1] [23:0] $end
  $var wire 24 ] tag_array[2][0] [23:0] $end
  $var wire 24 ^ tag_array[2][1] [23:0] $end
  $var wire 24 _ tag_array[3][0] [23:0] $end
  $var wire 24 ` tag_array[3][1] [23:0] $end
  $var wire 24 a tag_array[4][0] [23:0] $end
  $var wire 24 b tag_array[4][1] [23:0] $end
  $var wire 24 c tag_array[5][0] [23:0] $end
  $var wire 24 d tag_array[5][1] [23:0] $end
  $var wire 24 e tag_array[6][0] [23:0] $end
  $var wire 24 f tag_array[6][1] [23:0] $end
  $var wire 24 g tag_array[7][0] [23:0] $end
  $var wire 24 h tag_array[7][1] [23:0] $end
  $var wire 24 i tag_array[8][0] [23:0] $end
  $var wire 24 j tag_array[8][1] [23:0] $end
  $var wire 24 k tag_array[9][0] [23:0] $end
  $var wire 24 l tag_array[9][1] [23:0] $end
  $var wire 24 m tag_array[10][0] [23:0] $end
  $var wire 24 n tag_array[10][1] [23:0] $end
  $var wire 24 o tag_array[11][0] [23:0] $end
  $var wire 24 p tag_array[11][1] [23:0] $end
  $var wire 24 q tag_array[12][0] [23:0] $end
  $var wire 24 r tag_array[12][1] [23:0] $end
  $var wire 24 s tag_array[13][0] [23:0] $end
  $var wire 24 t tag_array[13][1] [23:0] $end
  $var wire 24 u tag_array[14][0] [23:0] $end
  $var wire 24 v tag_array[14][1] [23:0] $end
  $var wire 24 w tag_array[15][0] [23:0] $end
  $var wire 24 x tag_array[15][1] [23:0] $end
  $var wire 32 y data_array[0][0] [31:0] $end
  $var wire 32 z data_array[0][1] [31:0] $end
  $var wire 32 { data_array[1][0] [31:0] $end
  $var wire 32 | data_array[1][1] [31:0] $end
  $var wire 32 } data_array[2][0] [31:0] $end
  $var wire 32 ~ data_array[2][1] [31:0] $end
  $var wire 32 !! data_array[3][0] [31:0] $end
  $var wire 32 "! data_array[3][1] [31:0] $end
  $var wire 32 #! data_array[4][0] [31:0] $end
  $var wire 32 $! data_array[4][1] [31:0] $end
  $var wire 32 %! data_array[5][0] [31:0] $end
  $var wire 32 &! data_array[5][1] [31:0] $end
  $var wire 32 '! data_array[6][0] [31:0] $end
  $var wire 32 (! data_array[6][1] [31:0] $end
  $var wire 32 )! data_array[7][0] [31:0] $end
  $var wire 32 *! data_array[7][1] [31:0] $end
  $var wire 32 +! data_array[8][0] [31:0] $end
  $var wire 32 ,! data_array[8][1] [31:0] $end
  $var wire 32 -! data_array[9][0] [31:0] $end
  $var wire 32 .! data_array[9][1] [31:0] $end
  $var wire 32 /! data_array[10][0] [31:0] $end
  $var wire 32 0! data_array[10][1] [31:0] $end
  $var wire 32 1! data_array[11][0] [31:0] $end
  $var wire 32 2! data_array[11][1] [31:0] $end
  $var wire 32 3! data_array[12][0] [31:0] $end
  $var wire 32 4! data_array[12][1] [31:0] $end
  $var wire 32 5! data_array[13][0] [31:0] $end
  $var wire 32 6! data_array[13][1] [31:0] $end
  $var wire 32 7! data_array[14][0] [31:0] $end
  $var wire 32 8! data_array[14][1] [31:0] $end
  $var wire 32 9! data_array[15][0] [31:0] $end
  $var wire 32 :! data_array[15][1] [31:0] $end
  $var wire 4 ;! index [3:0] $end
  $var wire 24 <! tag [23:0] $end
  $var wire 32 =! i [31:0] $end
  $scope module RESET_LOOP $end
   $var wire 32 >! j [31:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
0&
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b000000000000000000000000 )
0*
0+
b00000000000000000000000000000000 ,
0-
0.
0/
00
01
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b000000000000000000000000 4
05
06
b00000000000000000000000000000000 7
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
b000000000000000000000000 Y
b000000000000000000000000 Z
b000000000000000000000000 [
b000000000000000000000000 \
b000000000000000000000000 ]
b000000000000000000000000 ^
b000000000000000000000000 _
b000000000000000000000000 `
b000000000000000000000000 a
b000000000000000000000000 b
b000000000000000000000000 c
b000000000000000000000000 d
b000000000000000000000000 e
b000000000000000000000000 f
b000000000000000000000000 g
b000000000000000000000000 h
b000000000000000000000000 i
b000000000000000000000000 j
b000000000000000000000000 k
b000000000000000000000000 l
b000000000000000000000000 m
b000000000000000000000000 n
b000000000000000000000000 o
b000000000000000000000000 p
b000000000000000000000000 q
b000000000000000000000000 r
b000000000000000000000000 s
b000000000000000000000000 t
b000000000000000000000000 u
b000000000000000000000000 v
b000000000000000000000000 w
b000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b00000000000000000000000000000000 !!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b00000000000000000000000000000000 $!
b00000000000000000000000000000000 %!
b00000000000000000000000000000000 &!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 )!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 +!
b00000000000000000000000000000000 ,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 .!
b00000000000000000000000000000000 /!
b00000000000000000000000000000000 0!
b00000000000000000000000000000000 1!
b00000000000000000000000000000000 2!
b00000000000000000000000000000000 3!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000000000000000000000 6!
b00000000000000000000000000000000 7!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
b0000 ;!
b000000000000000000000000 <!
b00000000000000000000000000000000 =!
b00000000000000000000000000000000 >!
b00000000000000000000000000100000 ?!
b00000000000000000000000000000100 @!
b00000000000000000000000000011000 A!
b00000000000000000000000000000010 B!
b00000000000000000000000000010000 C!
#1
